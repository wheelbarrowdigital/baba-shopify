<style>
  header {
    .navbar {
      /* this overflow:unset is in order to make sure mobile-menu can be seen */
      overflow: unset;
      position: relative;

      > .container {
        align-items: center;
        display: flex;
        flex-flow: row wrap;
        gap: var(--spacing-7);
        justify-content: space-between;
        margin: var(--spacing-4) auto;
        max-width: 1792px;
        overflow: visible;
        position: relative;
        width: 90%;
        z-index: 100;
      }

      .menu-toggle {
        background-color: transparent;
        border: none;
        color: currentColor;
        cursor: pointer;
        position: relative;
        height: 2rem;
        width: 2rem;

        @media (min-width: 992px) {
          display: none;
        }

        svg {
          left: 50%;
          position: absolute;
          top: 50%;
          transform: translate(-50%, -50%);
          transition: opacity 0.3s ease, transform 0.3s ease;
        }

        .hamburger {
          height: 2rem;
          opacity: 1;
          transform: translate(-50%, -50%) rotate(0deg);
          width: 2rem;
        }

        .close {
          height: 1.25rem;
          opacity: 0;
          transform: translate(-50%, -50%) rotate(90deg);
          width: 1.25rem;
        }
      }

      .desktop-menu {
        display: flex;
        flex-flow: row wrap;
        gap: var(--spacing-4);

        @media (max-width: 991px) {
          display: none;
        }
      }

      .mobile-menu {
        align-items: flex-end;
        background-color: var(--background-100);
        box-shadow: 0 2px 2px -2px rgba(0, 0, 0, 0.2);
        display: flex;
        flex-flow: column nowrap;
        gap: var(--spacing-7);
        justify-content: flex-start;
        left: 0;
        opacity: 0;
        padding: var(--spacing-9) var(--spacing-6);
        position: absolute;
        text-align: right;
        top: 100%;
        transition: opacity 0.3s ease;
        visibility: hidden;
        width: 100%;
        z-index: 1000;

        nav {
          align-items: flex-end;
          display: flex;
          flex-flow: column nowrap;
          gap: var(--spacing-4);
          justify-content: flex-start;
          text-align: right;
        }
      }

      @media (max-width: 991px) {
        &.open {
          .menu-toggle {
            .hamburger {
              opacity: 0;
              transform: translate(-50%, -50%) rotate(-90deg);
            }

            .close {
              opacity: 1;
              transform: translate(-50%, -50%) rotate(0deg);
            }
          }

          .mobile-menu {
            opacity: 1;
            visibility: visible;
          }
        }
      }
    }
  }
</style>

<div class="navbar">
  <div class="container">
    {% if section.settings.logo != blank %}
      <a class="logo-wrapper" href="/">
        <img
          src="{{ section.settings.logo | image_url: width: 100 }}"
          alt="{{ section.settings.logo.alt }}"
          width="56px"
          height="100%"
        >
      </a>
    {% endif %}

    <button class="menu-toggle">
      <svg
        class="hamburger"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
        id="Navigation-Menu--Streamline-Ultimate"
      >
        <desc>Navigation Menu Streamline Icon: https://streamlinehq.com</desc>
        <path d="m2.25 18.003 19.5 0" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path>
        <path d="m2.25 12.003 19.5 0" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path>
        <path d="m2.25 6.003 19.5 0" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path>
      </svg>
      <svg class="close" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" id="Close--Streamline-Ultimate">
        <desc>Close Streamline Icon: https://streamlinehq.com</desc>
        <path d="m0.75 23.249 22.5 -22.5" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path>
        <path d="M23.25 23.249 0.75 0.749" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path>
      </svg>
    </button>

    <div class="desktop-menu">
      <nav>
        {% for link in linklists['main-menu'].links %}
          {% render 'button', button: link.title, class: 'nav-item', style: 'link', text: link.title, url: link.url %}
        {% endfor %}
      </nav>
      <div class="cart-account">
        {% render 'button', button: 'Cart', style: 'link', text: 'Cart', url: '/cart' %}
        {% render 'button', button: 'Account', style: 'link', text: 'Account', url: '/account' %}
      </div>
    </div>
  </div>

  <div class="mobile-menu">
    <nav>
      {% for link in linklists['main-menu'].links %}
        {% render 'button', button: link.title, class: 'nav-item', style: 'link', text: link.title, url: link.url %}
        {% if link.links != blank %}
          <div class="submenu">
            {% for child_link in link.links %}
              {% render 'button',
                button: child_link.title,
                style: 'link',
                text: child_link.title,
                url: child_link.url
              %}
            {% endfor %}
          </div>
        {% endif %}
      {% endfor %}
    </nav>

    <div class="cart-account">
      {% render 'button', button: 'Cart', style: 'link', text: 'Cart', url: '/cart' %}
      {% render 'button', button: 'Account', style: 'link', text: 'Account', url: '/account' %}
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const main = document.querySelector('main#MainContent');
    const navbar = document.querySelector('.navbar');
    const menuButton = document.querySelector('.navbar .menu-toggle');

    const toggleMenu = () => {
      main.classList.toggle('mobile-menu-open');
      navbar.classList.toggle('open');
    };

    menuButton?.addEventListener('click', toggleMenu);
  });
</script>

{% schema %}
{
  "name": "Header",
  "tag": "header",
  "class": "header",
  "settings": [
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Logo"
    }
  ]
}
{% endschema %}
