<style>
  main {
    > .overlay {
      background-color: #000000c2;
      display: none;
      height: 100%;
      left: 0;
      position: absolute;
      top: 0;
      width: 100%;
      z-index: 99;
    }

    &.mobile-menu-open {
      > .overlay {
        display: block;
      }
    }
  }

  main.mobile-menu-open .overlay {
    background-color: rgba(0, 0, 0, 0.5);
    height: 100%;
    left: 0;
    position: fixed;
    top: 0;
    width: 100%;
  }

  header {
    .navbar {
      /* this overflow:unset is in order to make sure mobile-menu can be seen */
      overflow: unset;

      > .container {
        align-items: center;
        display: flex;
        flex-flow: row wrap;
        gap: var(--spacing-7);
        justify-content: space-between;
        margin: var(--spacing-4) auto;
        max-width: 1792px;
        overflow: visible;
        position: relative;
        width: 96%;
        z-index: 100;
      }

      .menu-toggle {
        background-color: transparent;
        border: none;
        color: currentColor;
        cursor: pointer;
        position: relative;
        height: 2rem;
        width: 2rem;

        @media (min-width: 768px) {
          display: none;
        }

        svg {
          height: 2rem;
          width: 2rem;
          left: 50%;
          position: absolute;
          top: 50%;
          transform: translate(-50%, -50%);
          transition: opacity 0.3s ease, transform 0.3s ease;
        }

        .hamburger {
          opacity: 1;
          transform: translate(-50%, -50%) rotate(0deg);
        }

        .close {
          opacity: 0;
          transform: translate(-50%, -50%) rotate(90deg);
        }
      }

      .mobile-menu {
        align-items: flex-end;
        display: none;
        flex-flow: column nowrap;
        gap: var(--spacing-7);
        justify-content: flex-start;
        left: 0;
        padding: var(--spacing-9) var(--spacing-6);
        position: absolute;
        text-align: right;
        top: 100%;
        width: 100%;
      }

      &.open {
        @media (max-width: 768px) {
          color: #ffffff;
        }

        .menu-toggle {
          .hamburger {
            opacity: 0;
            transform: translate(-50%, -50%) rotate(-90deg);
          }

          .close {
            opacity: 1;
            transform: translate(-50%, -50%) rotate(0deg);
          }
        }

        .mobile-menu {
          display: flex;

          @media (min-width: 768px) {
            display: none;
          }
        }
      }
    }
  }
</style>

<div class="navbar">
  <div class="container">
    {% if section.settings.logo != blank %}
      <a class="logo-wrapper" href="/">
        <img
          src="{{ section.settings.logo | image_url: width: 100 }}"
          alt="{{ section.settings.logo.alt }}"
          width="{{ section.settings.logo_width }}"
          height="100%"
        >
      </a>
    {% endif %}

    <button class="menu-toggle">
      <svg
        class="hamburger"
        viewBox="0 0 24 24"
        xmlns="http://www.w3.org/2000/svg"
        id="Navigation-Menu--Streamline-Ultimate"
      >
        <desc>Navigation Menu Streamline Icon: https://streamlinehq.com</desc>
        <path d="m2.25 18.003 19.5 0" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path>
        <path d="m2.25 12.003 19.5 0" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path>
        <path d="m2.25 6.003 19.5 0" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path>
      </svg>
      <svg class="close" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg" id="Close--Streamline-Ultimate">
        <desc>Close Streamline Icon: https://streamlinehq.com</desc>
        <path d="m0.75 23.249 22.5 -22.5" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path>
        <path d="M23.25 23.249 0.75 0.749" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5"></path>
      </svg>
    </button>

    <div class="mobile-menu">
      <nav>
        {% for link in linklists['main-menu'].links %}
          {% render 'button', button: link.title, class: 'nav-item', style: 'link', text: link.title, url: link.url %}
          {% if link.links != blank %}
            <div class="submenu">
              {% for child_link in link.links %}
                {% render 'button',
                  button: child_link.title,
                  style: 'link',
                  text: child_link.title,
                  url: child_link.url
                %}
              {% endfor %}
            </div>
          {% endif %}
        {% endfor %}
      </nav>

      <div class="cart-account">
        {% render 'button', button: 'Cart', style: 'link', text: 'Cart', url: '/cart' %}
        {% render 'button', button: 'Account', style: 'link', text: 'Account', url: '/account' %}
      </div>
    </div>

    <div class="desktop-menu" style="display: none;">
      <nav>
        {% for link in linklists['main-menu'].links %}
          {% render 'button', button: link.title, class: 'nav-item', style: 'link', text: link.title, url: link.url %}
        {% endfor %}
      </nav>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const main = document.querySelector('main#MainContent');
    const navbar = document.querySelector('.navbar');
    const menuButton = document.querySelector('.navbar .menu-toggle');

    const toggleMenu = () => {
      main.classList.toggle('mobile-menu-open');
      navbar.classList.toggle('open');
    };

    menuButton?.addEventListener('click', toggleMenu);
  });
</script>

{% schema %}
{
  "name": "Header",
  "tag": "header",
  "class": "header",
  "settings": [
    {
      "type": "image_picker",
      "id": "logo",
      "label": "Logo"
    },
    {
      "type": "range",
      "id": "logo_width",
      "label": "Logo Width",
      "default": 64,
      "min": 16,
      "max": 128,
      "step": 4,
      "unit": "px"
    }
  ]
}
{% endschema %}
