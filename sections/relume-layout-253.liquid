{% style %}
  section.relume-layout-253 {
    > .container {
      display: grid;
      gap: var(--spacing-11);
      grid-template-columns: 1fr;

      @media (min-width: 1024px) {
        gap: var(--spacing-13);
      }

      @media (min-width: 1440px) {
        grid-template-columns: 1fr 2fr;
      }
    }

    .alpha {
      max-width: 768px;

      .tagline + .heading {
        margin-top: var(--spacing-2);
      }

      .heading + .paragraph {
        margin-top: var(--spacing-3);
      }

      :is(.tagline, .heading, .paragraph) ~ .buttons {
        margin-top: var(--spacing-6);

        @media (min-width: 1024px) {
          margin-top: var(--spacing-7);
        }
      }
    }

    .grid {
      display: grid;
      gap: var(--spacing-9);
      grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));

      @media (min-width: 1024px) {
        gap: var(--spacing-11);
        grid-template-columns: 1fr 1fr;
      }
    }

    .grid-item {
      display: flex;
      flex-flow: column nowrap;
      gap: var(--spacing-6);

      @media (min-width: 1024px) {
        gap: var(--spacing-7);
      }

      .icon {
        height: 2rem;
        width: 2rem;
      }

      .heading + .paragraph {
        margin-top: var(--spacing-3);
      }
    }
  }
{% endstyle %}

<div class="container container-lg {% unless request.design_mode %}reveal-from-bottom{% endunless %}">
  <div class="alpha">
    {% for block in section.blocks %}
      {% case block.type %}
        {% when 'tagline' %}
          <p class="tagline text-sm uppercase semibold">{{ block.settings.content }}</p>
        {% when 'heading' %}
          <h2 class="heading heading-5xl">{{ block.settings.content }}</h2>
        {% when 'paragraph' %}
          <p class="paragraph text-lg">{{ block.settings.content }}</p>
      {% endcase %}
    {% endfor %}

    {% capture button_content %}
          {% for block in section.blocks %}
            {% case block.type %}
              {% when 'button' %}
                {% render 'button', text: block.settings.text, url: block.settings.url, style: block.settings.style %}
            {% endcase %}
          {% endfor %}
      {% endcapture %}
    {% render 'buttons', content: button_content %}
  </div>

  <div class="bravo grid">
    {% for block in section.blocks %}
      {% case block.type %}
        {% when 'grid_item' %}
          <div class="grid-item">
            {% if block.settings.icon != blank %}
              {% assign icon_parts = block.settings.icon | split: '|' %}
              {% render 'icon', icon: icon_parts[3], library: icon_parts[0], set: icon_parts[1], style: icon_parts[2] %}
            {% endif %}
            {% if block.settings.heading != blank or block.settings.paragraph != blank %}
              <div class="text">
                {% if block.settings.heading != blank %}
                  <h2 class="heading heading-3xl">{{ block.settings.heading }}</h2>
                {% endif %}
                {% if block.settings.paragraph != blank %}
                  <p class="paragraph text-lg">{{ block.settings.paragraph }}</p>
                {% endif %}
              </div>
            {% endif %}
          </div>
      {% endcase %}
    {% endfor %}
  </div>
</div>

{% schema %}
{
  "name": "Relume Layout 253",
  "tag": "section",
  "class": "relume-layout-253 color-scheme-light amber",
  "blocks": [
    {
      "type": "tagline",
      "name": "Tagline",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "content",
          "label": "Content"
        }
      ]
    },
    {
      "type": "heading",
      "name": "Heading",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "content",
          "label": "Content"
        }
      ]
    },
    {
      "type": "paragraph",
      "name": "Paragraph",
      "limit": 1,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "content",
          "label": "Content"
        }
      ]
    },
    {
      "type": "button",
      "name": "Button",
      "limit": 2,
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Text"
        },
        {
          "type": "url",
          "id": "url",
          "label": "URL"
        },
        {
          "type": "select",
          "id": "style",
          "label": "Style",
          "options": [
            { "value": "fill", "label": "Fill" },
            { "value": "outline", "label": "Outline" },
            { "value": "link", "label": "Link" }
          ]
        }
      ]
    },
    {
      "type": "grid_item",
      "name": "Grid Item",
      "limit": 4,
      "settings": [
        {
          "type": "select",
          "id": "icon",
          "label": "Icon",
          "options": [
            { "value": "streamline|ultimate|bold|coffee-cup", "label": "Coffee Cup" },
            { "value": "streamline|ultimate|bold|coffee-mug", "label": "Coffee Mug" },
            { "value": "streamline|ultimate|bold|coffee-read", "label": "Coffee Read" },
            { "value": "streamline|ultimate|bold|coffee-turkish", "label": "Coffee Turkish" },
            { "value": "streamline|ultimate|bold|shop-barista", "label": "Shop Barista" }
          ]
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Heading"
        },
        {
          "type": "inline_richtext",
          "id": "paragraph",
          "label": "Paragraph"
        }
      ]
    }
  ]
}
{% endschema %}
