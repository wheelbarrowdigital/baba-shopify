{% comment %}
  Renders a carousel component

  Accepts:
  - items: {Array} an array of media objects to display in the carousel

  Usage:
  {% render 'carousel',
    aspect_ratio: string (optional) (default: '1:1'),
    carousel_id: string (optional) (default: 'carousel-{{ 'now' | date: '%s' | modulo: 1000000000000000000 }}'),
  items: [
      {
        alt: 'Dandelion milk',
        id: 21772527435841,
        media_type: 'image',
        position: 1,
        preview_image: {}
      }
    ],
    class: string (optional)
  %}
{% endcomment %}

{% style %}
  .carousel-container {
    overflow: hidden;
    position: relative;
  }

  .carousel-track {
    display: flex;
    transition: transform 0.5s ease;
    width: 100%;
  }

  .carousel-item {
    flex: 0 0 100%;
    width: 100%;
  }

  .carousel-arrow {
    background: rgba(0, 0, 0, 0.5);
    border: none;
    color: white;
    cursor: pointer;
    font-size: 1.5rem;
    padding: 1rem;
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    z-index: 10;

    &:disabled {
      cursor: unset;
      opacity: 0;
    }

    &.prev {
      left: 0.75rem;
    }

    &.next {
      right: 0.75rem;
    }
  }

  .carousel-dots {
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 8px;
    z-index: 10;
  }

  .carousel-dot {
    width: 10px;
    height: 10px;
    background: rgba(255, 255, 255, 0.5);
    border-radius: 50%;
    cursor: pointer;
    transition: background 0.3s;
  }

  .carousel-dot.active {
    background: rgba(255, 255, 255, 1);
  }
{% endstyle %}

{% assign aspect_ratio = aspect_ratio | default: '1:1' %}

{% liquid
  if carousel_id == blank
    assign timestamp = 'now' | date: '%s'
    assign random_number = timestamp | modulo: 1000000000000000000
    assign carousel_id = 'carousel-' | append: random_number
  endif

  assign carousel_classes = 'carousel-container'

  if class != blank
    assign carousel_classes = carousel_classes | append: ' ' | append: class
  endif
%}

<div class="{{ carousel_classes }}" data-carousel-id="{{ carousel_id }}">
  <div class="carousel-track">
    {% for media in items %}
      <div class="carousel-item">
        {% if media.media_type == 'image' or media.media_type == 'video' %}
          {% if media.media_type == 'image' %}
            {% render 'image', aspect_ratio: aspect_ratio, image: media %}
          {% elsif media.media_type == 'video' %}
            {% render 'video', aspect_ratio: aspect_ratio, video: media %}
          {% endif %}
        {% endif %}
      </div>
    {% endfor %}
  </div>
  <button class="carousel-arrow prev">←</button>
  <button class="carousel-arrow next">→</button>
  <div class="carousel-dots">
    {% for media in items %}
      <span class="carousel-dot {% if forloop.first %}active{% endif %}"></span>
    {% endfor %}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const container = document.querySelector('[data-carousel-id="{{ carousel_id }}"]');
    if (!container) return;
    const track = container.querySelector('.carousel-track');
    const items = container.querySelectorAll('.carousel-item');
    const prevButton = container.querySelector('.carousel-arrow.prev');
    const nextButton = container.querySelector('.carousel-arrow.next');
    const dots = container.querySelectorAll('.carousel-dot');
    let currentIndex = 0;
    const totalItems = items.length;

    function updateCarousel() {
      const offset = -currentIndex * 100;
      track.style.transform = `translateX(${offset}%)`;

      // Update active dot
      dots.forEach((dot, index) => {
        dot.classList.toggle('active', index === currentIndex);
      });

      // Update button states
      prevButton.disabled = currentIndex === 0;
      nextButton.disabled = currentIndex === totalItems - 1;
    }

    prevButton.addEventListener('click', () => {
      if (currentIndex > 0) {
        currentIndex--;
        updateCarousel();
      }
    });

    nextButton.addEventListener('click', () => {
      if (currentIndex < totalItems - 1) {
        currentIndex++;
        updateCarousel();
      }
    });

    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        currentIndex = index;
        updateCarousel();
      });
    });

    // Initial setup
    updateCarousel();
  });
</script>
